# Firebase Storage Security Rules for Public Image Access

## Copy these rules to Firebase Console > Storage > Rules

```
rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Allow public read access to profile images
    // This makes the images accessible via web browsers
    match /profile_images/{userId}_{timestamp}.jpg {
      allow read: if true; // Public read access - anyone can view the image
      allow write: if request.auth != null 
                   && request.auth.uid == userId.split('_')[0]
                   && request.resource.size < 5 * 1024 * 1024 // 5MB limit
                   && request.resource.contentType.matches('image/.*');
    }
    
    // Default rule - deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
```

## How to Deploy These Rules

### Option 1: Firebase Console (Recommended)
1. Go to [Firebase Console](https://console.firebase.google.com/)
2. Select your project (`cord-bfb48`)
3. Go to **Storage** → **Rules**
4. Replace the existing rules with the rules above
5. Click **Publish**

### Option 2: Firebase CLI
If you have Firebase CLI installed:
```bash
firebase deploy --only storage
```

## What This Implementation Does

1. **Image Upload**: When user picks an image, it's uploaded to Firebase Storage in `profile_images/` folder
2. **Public URL**: Firebase generates a public download URL (accessible from any web browser)
3. **Firestore Save**: The public URL is immediately saved to the "users" collection in Firestore
4. **Web Access**: The URL can be copied from Firestore and opened in any web browser

## Example URL Structure
The saved URL will look like:
```
https://firebasestorage.googleapis.com/v0/b/cord-bfb48.appspot.com/o/profile_images%2Fuser123_1234567890.jpg?alt=media&token=...
```

## Testing the Implementation
1. Upload an image in your app
2. Check Firestore database → users collection → your user document
3. Copy the `imageUrl` field value
4. Paste it in any web browser
5. The image should display directly in the browser